<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ieasy</groupId>
	<artifactId>ieasy</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>ieasy</name>

	<properties>
		<openoffice.version>3.2.1</openoffice.version>
		<jodconverter.version>3.0-beta-4</jodconverter.version>
		<spring.version>4.0.6.RELEASE</spring.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<argLine>-Dfile.encoding=UTF-8</argLine><!-- 解决Maven test 控制输出乱码 -->
	</properties>

	<!-- <repositories> <repository> <id>nexus</id> <name>Nexus Repository</name> <url>http://localhost:8081/nexus/content/groups/public/</url> <releases> <enabled>true</enabled> </releases> <snapshots> <enabled>true</enabled> </snapshots> </repository> </repositories> -->

	<repositories>
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>http://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>nexus</id>
			<name>Nexus Repository</name>
			<url>http://localhost:8081/nexus/content/groups/public/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spy</id>
			<name>Spy Repository</name>
			<url>http://files.couchbase.com/maven2/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>xerces</id>
			<name>xerces</name>
			<url>https://xerces.apache.org/xerces2-j/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>proxool</id>
			<name>proxool</name>
			<url>http://proxool.cvs.sourceforge.net/viewvc/proxool/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>oschinaMavenThirdparty</id>
			<name>oschinaMavenThirdparty</name>
			<url>http://maven.oschina.net/content/repositories/thirdparty/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>bastengao-mvn-repository</id>
			<url>https://raw.github.com/bastengao/mvn-repository/master/releases</url>
		</repository>
		<!-- <repository> <id>osc</id> <name>oschina</name> <url>http://maven.oschina.net/content/groups/public/</url> <snapshots> <enabled>false</enabled> </snapshots> </repository> -->
	</repositories>

	<dependencies>

		<!-- junit单元测试 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<!-- slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
		</dependency>

		<!-- dom4j -->
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
			<version>1.1.4</version>
		</dependency>

		<!-- fastjson -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.1.41</version>
		</dependency>

		<!-- mysql驱动 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.26</version>
		</dependency>

		<!-- druid数据源 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>0.2.26</version>
		</dependency>

		<!-- 加入本地仓库依赖包（百度编辑器文件上传需要的jar） -->
		<!-- <dependency> <groupId>com.baidu.ueditor</groupId> <artifactId>ueditor</artifactId> <version>1.1.4.2</version> </dependency> -->
		<!-- <dependency> <groupId>com.baidu</groupId> <artifactId>json</artifactId> <version>1.0</version> </dependency> -->

		<!-- 加入Ant依赖包，用于压缩 -->
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant</artifactId>
			<version>1.9.4</version>
		</dependency>

		<!-- ftp操作依赖 -->
		<!-- <dependency> <groupId>it.sauronsoftware.ftp4j</groupId> <artifactId>ftp4j</artifactId> <version>1.72</version> </dependency> -->
		<dependency>
			<groupId>it.sauronsoftware.ftp4j</groupId>
			<artifactId>ftp4j</artifactId>
			<version>1.7.2-fixed</version>
		</dependency>

		<!-- ssh依赖 -->
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.50</version>
		</dependency>

		<!-- 加入io包 -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>

		<!-- 加入lang包 -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>

		<!-- 加入lang3包 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>

		<!-- 加入net包，操作FTP -->
		<dependency>
			<groupId>org.kie.modules</groupId>
			<artifactId>org-apache-commons-net</artifactId>
			<version>6.1.0.Final</version>
			<type>pom</type>
		</dependency>

		<!-- 加入mail包 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-email</artifactId>
			<version>1.3.2</version>
		</dependency>

		<!-- 加入BeanUtils包 -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.2</version>
		</dependency>

		<!-- 加入DBUtils包 -->
		<dependency>
			<groupId>commons-dbutils</groupId>
			<artifactId>commons-dbutils</artifactId>
			<version>1.5</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.8.4</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.8.4</version>
		</dependency>


		<!-- 加入POI依赖包，支持Office 2007+ XML -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.10-FINAL</version>
		</dependency>

		<!-- 为POI支持Office Open XML -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.10-FINAL</version>
		</dependency>

		<!-- 支持Word文档的操作 -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-scratchpad</artifactId>
			<version>3.1-FINAL</version>
		</dependency>


		<!-- 加入拼音转换工具 -->
		<dependency>
			<groupId>com.belerweb</groupId>
			<artifactId>pinyin4j</artifactId>
			<version>2.5.0</version>
		</dependency>

		<!-- 加入Freemarker模板引擎 -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.20</version>
		</dependency>

		<!-- 加入fileupload依赖包 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>

		<!-- 加入batik依赖包，用于highcharts导出图表 -->
		<dependency>
			<groupId>org.apache.xmlgraphics</groupId>
			<artifactId>batik-codec</artifactId>
			<version>1.7</version>
		</dependency>

		<!-- 加入im4java -->
		<dependency>
			<groupId>org.im4java</groupId>
			<artifactId>im4java</artifactId>
			<version>1.4.0</version>
		</dependency>

		<!-- 通过samba访问共享目录 -->
		<dependency>
			<groupId>org.samba.jcifs</groupId>
			<artifactId>jcifs</artifactId>
			<version>1.3.3</version>
		</dependency>

		<!-- jstl -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<version>2.3.1</version>
			<scope>provided</scope>
		</dependency>
		<!-- servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>


		<!-- OpenOffice 开始 -->
		<dependency>
			<groupId>org.openoffice</groupId>
			<artifactId>juh</artifactId>
			<version>${openoffice.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openoffice</groupId>
			<artifactId>unoil</artifactId>
			<version>${openoffice.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openoffice</groupId>
			<artifactId>jurt</artifactId>
			<version>${openoffice.version}</version>
		</dependency>
		<!-- java的OpenDucument文件转换器，它利用OpenOffice来进行转换工作 -->
		<dependency>
			<groupId>org.artofsolving</groupId>
			<artifactId>jodconverter</artifactId>
			<version>${jodconverter.version}</version>
		</dependency>
		<!-- OpenOffice 结束 -->


		<!-- Apache activeMQ 消息服务 -->
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-all</artifactId>
			<version>5.9.0</version>
		</dependency>

		<!-- WebSocket，xsocket封装 -->
		<dependency>
			<groupId>org.xsocket</groupId>
			<artifactId>xSocket</artifactId>
			<version>2.8.15</version>
		</dependency>
		<dependency>
			<groupId>org.xsocket</groupId>
			<artifactId>xSocket-multiplexed</artifactId>
			<version>2.1.7</version>
		</dependency>

		<!-- 缓存 -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>2.6.6</version>
			<scope>provided</scope>
		</dependency>

		<!-- Inject JSR330才可以注入 -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.3.5.Final</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.1.Final</version>
		</dependency>

		<!-- 加入Quartz定时作业 -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.1</version>
		</dependency>


		<!-- spring相关 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>4.0.1.RELEASE</version>
		</dependency>

		<!-- AOP需要的包 -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.8.1</version>
		</dependency>

	</dependencies>


	<build>
		<plugins>
			<!-- 跳过运行Test的配置 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.4.2</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>


			<!-- 编译的时候使用JDK1.7和UTF-8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- 配置Maven插件(mvn jetty:run可以运行项目) -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.2.1.v20140609</version>
				<configuration>
					<!-- 指定访问端口 -->
					<httpConnector>
						<port>9999</port>
					</httpConnector>
					<!-- 间隔x扫描一次,实现热部署 -->
					<scanIntervalSeconds>3</scanIntervalSeconds>
					<!-- 编写类文件之后，是否自动重启jetty；可选后面两个值[manual|automatic] -->
					<reload>manual</reload>
					<!-- 指定关闭端口 -->
					<stopPort>9998</stopPort>
					<stopKey>stop-jetty-for-it</stopKey>
					<webApp>
						<!-- 指定项目路径(如果不写，则按照pom.xml里面的artifactId属性值配置)，访问路径为http://localhost:9999/sshe -->
						<!-- 配置<contextPath>/ieasy</contextPath>，则访问路径为http://localhost:9999/ieasy -->
						<!-- 配置<contextPath>/</contextPath>，则访问路径为http://localhost:9999 -->
						<contextPath>/ieasy</contextPath>
						<!-- 更改jetty默认webdefault.xml文件，主要修改了useFileMappedBuffer属性为false，使其不锁定静态文件 -->
						<!-- 此文件在C盘\用户目录\.m2\repository\org\eclipse\jetty\jetty-webapp\9.1.0.RC1\找到jar包，打开jar包目录org\eclipse\jetty\webapp\目录中 -->
						<defaultsDescriptor>jettyWebDefault.xml</defaultsDescriptor>
					</webApp>
				</configuration>
			</plugin>

		</plugins>
	</build>


</project>